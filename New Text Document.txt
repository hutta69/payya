----------------------------LCD Scroll------------------------------
#include <LiquidCrystal.h>

LiquidCrystal lcd(13,12,11,10,9,8);


void setup() {
  // put your setup code here, to run once:
  lcd.begin(16, 2);


  lcd.print("South Eastern University");
  delay(200);


}
void loop() {

  lcd.scrollDisplayRight();
  delay(500);

}
--------------------------------------------------------------------

-------------------------LCD Two Line Scroll------------------------
#include <LiquidCrystal.h>

// Initialize the LCD (RS, Enable, D4, D5, D6, D7 pins)
LiquidCrystal lcd(13, 12, 11, 10, 9, 8);

void setup() {
  // Initialize the LCD with 16 columns and 2 rows
  lcd.begin(16, 2);

  // Print text on the first line
  lcd.setCursor(0, 0); // Set cursor to column 0, row 0
  lcd.print("THIS IS A TEXT");

  // Print text on the second line
  lcd.setCursor(0, 1); // Set cursor to column 0, row 1
  lcd.print("SCROLLING TEXT");

  // Brief delay to allow initial text display
  delay(1000);
}

void loop() {
  // Scroll the entire display to the right
  lcd.scrollDisplayRight();
  delay(200); // Adjust delay for smoother scrolling
}
----------------------------------------------------------------------
---------------------PIR Sensor---------------------------------------
#include <LiquidCrystal.h>

// Pin definitions
const int ledPin = 7;    // LED output
const int buzzerPin = 6; // Buzzer output
const int motionPin = 5;  // PIR sensor input

// LCD setup (with standard 16-pin connection)
LiquidCrystal lcd(13,12,11,10,9,8); // RS, E, D4, D5, D6, D7 pins

void setup() {
  // Initialize pins
  pinMode(motionPin, INPUT);
  pinMode(ledPin, OUTPUT);
  pinMode(buzzerPin, OUTPUT);

  // Start LCD
  lcd.begin(16, 2);
 
 
}

void loop() {
  // Read PIR sensor
  int motionDetected = digitalRead(motionPin);

  if (motionDetected == HIGH) {
    // Motion detected
    digitalWrite(ledPin, HIGH);  // Turn on LED
    digitalWrite(buzzerPin, HIGH); // Turn on Buzzer
    lcd.setCursor(0, 1);
    lcd.print("Motion Detected");
    
 
  } else {
    // No motion detected
    digitalWrite(ledPin, LOW);  // Turn off LED
    digitalWrite(buzzerPin, LOW); // Turn off Buzzer
    lcd.clear();
    lcd.setCursor(0, 1);
    lcd.print("No Motion     "); // Clear previous message
  
  }
  
  // Delay for a short time to stabilize PIR sensor
  delay(200);
}
-------------------------------------------------------------------------
--------------------------------Rain Sensor------------------------------
#include<LiquidCrystal.h>
LiquidCrystal lcd(13,12,11,10,9,8);

const int rainPin = 2;
const int buzz = 1;
const int red = 6;
const int green = 7;

void setup() {
  lcd.begin(16,2);
  lcd.print("ready to display");
  delay(200);
  // lcd.clear();
  pinMode(rainPin, INPUT);
  pinMode(buzz, OUTPUT);
  pinMode(red,OUTPUT);
  pinMode(green, OUTPUT);

}

void loop() {

  int motion = digitalRead(rainPin);

  if (motion == HIGH) {
    digitalWrite(buzz, HIGH);
    digitalWrite(red, HIGH);
     digitalWrite(green, LOW);
    lcd.clear();
    lcd.setCursor(0,0);
    lcd.print("rain");
    
  
  }
  else {
  digitalWrite(buzz,LOW);
  digitalWrite(green, HIGH);
   digitalWrite(red, LOW);
  lcd.clear();
  lcd.setCursor(0,0);
  lcd.print("no rain");

  
}
delay(1000);

}
-------------------------------------------------------------------------
--------------------------Ultrasonic Sensor------------------------------
#include <LiquidCrystal.h>

// Pins for ultrasonic sensor
const int trigPin = 7;
const int echoPin = 6;

// Pins for buzzer
const int buzzerPin = 5;

// Initialize the LCD (RS, E, D4, D5, D6, D7)
LiquidCrystal lcd(13, 12, 11, 10, 9, 8);

void setup() {
  // Set up LCD
  lcd.begin(16, 2);  // 16 columns and 2 rows
  lcd.print("Distance: ");
  
  // Set up ultrasonic sensor pins
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);
  
  // Set up buzzer
  pinMode(buzzerPin, OUTPUT);
  
  // Initialize buzzer as OFF
  digitalWrite(buzzerPin, LOW);
  
  // Begin serial communication (optional for debugging)
  Serial.begin(9600);
}

void loop() {
  // Measure distance
  long duration;
  float distanceCm;

  // Trigger the ultrasonic sensor
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  // Read the echo time
  duration = pulseIn(echoPin, HIGH);

  // Calculate distance in cm
  distanceCm = duration * 0.034 / 2;

  // Display distance on LCD
  lcd.setCursor(0, 1);  // Move to the second line
  lcd.print(distanceCm);
  lcd.print(" cm   ");  // Spaces to clear residual characters

  // Check distance and control buzzer
  if (distanceCm > 100) {
    digitalWrite(buzzerPin, HIGH);  // Turn on the buzzer
  } else {
    digitalWrite(buzzerPin, LOW);   // Turn off the buzzer
  }

  // Optional: Print distance to Serial Monitor
  Serial.print("Distance: ");
  Serial.print(distanceCm);
  Serial.println(" cm");

  delay(500);  // Short delay for stability
}
